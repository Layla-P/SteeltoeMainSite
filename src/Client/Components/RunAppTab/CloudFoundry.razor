@using System
@implements IDisposable

<Tab Title="Cloud Foundry">
	<ol>
		<li class="@(NoCFProvider || NoPackageManager?"hide":"")">
			Open the package manager console
			<img src="images/initializr/open-package-manager-console.png" class="img-fluid" />
		</li>
		<li class="@(NoCFProvider || NoPackageManager?"hide":"")">
			Add the Cloud Foundry package to the project
			<code class="inline-no-ps">PM&gt; Install-Package Steeltoe.Extensions.Configuration.CloudFoundryCore</code>
		</li>
		<li class="@(NoCFProvider?"hide":"")">
			Add the Cloud Foundry configuration provider in <b>Program.cs</b>
<pre><code>using Steeltoe.Extensions.Configuration.CloudFoundry;
...
var builder = WebHost.CreateDefaultBuilder(args)
 ...

 .AddCloudFoundry()
 .UseStartup&lt;Startup&gt;();
</code></pre>
		</li>
		<li>
			Publish the application locally using the .NET cli. The following command will create a publish folder automatically.
			<code class="inline">dotnet publish -o .\publish &lt;PATH_TO&gt;\@(ProjectName).csproj</code>
		</li>
		<li>
			Create <b>manifest.yml</b> in the same folder as @(ProjectName).csproj
			<pre><code>---
applications:
- name: @(ProjectName)
  buildpacks:
    - </code>@if (AsDotNetFramework) {
<code>hwc_buildpack</code>
} else {
<code>dotnet_core_buildpack</code>
}<code>  stack: </code>@if (AsDotNetFramework) {
<code>windows</code>
} else {
<code>cflinuxfs3</code>
}
 @if(!NoCFServices && !string.IsNullOrEmpty(InstanceName)){
<code>  services:
    - @InstanceName</code>
 }</pre>
		</li>
		<Tip><Message>With yaml files indention and line endings matter. Use an IDE like VS Code to confirm spacing and that line endings are set to <code>LF</code> (not the Windows default <code>CR LF</code>)</Message></Tip>
		<li>
			Push the app to Cloud Foundry
			<code class="inline">cf push -f &lt;PATH_TO&gt;\manifest.yml -p .\publish</code>
		</li>
		@if (IncludeNavigateToApp) {
			<li>Navigate to the application endpoint <code>https://&lt;APP_ROUTE&gt;/api/values</code></li>
		}
		@AdditionalSteps
	</ol>
</Tab>

@code {
	[Parameter]
	public string ProjectName { get; set; } = "";
	[Parameter]
	public string InstanceName { get; set; } = "";
	[Parameter]
	public bool NoCFProvider { get; set; } = false;
	[Parameter]
	public bool NoCFServices { get; set; } = false;
	[Parameter]
	public string ServiceName { get; set; } = "";
	[Parameter]
	public bool NoPackageManager { get; set; } = false;
	[Parameter]
	public bool IncludeNavigateToApp { get; set; } = true;
	[Parameter]
	public bool AsDotNetFramework { get; set; } = false;

	[Parameter]
	public RenderFragment AdditionalSteps { get; set; }

	protected override void OnInitialized()
	{
	}

	public void Dispose()
	{
	}
}