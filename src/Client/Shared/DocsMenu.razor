@inject NavigationManager NavigationManager
@inject  HttpClient Http
@inject IJSRuntime JSRuntime

@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Routing

@if (MenuBuilder == null) {
	<p><em>&nbsp;</em></p>
} else {
	<BlazoredMenu Css="" MenuBuilder="@MenuBuilder" />
}
@code {
	protected MenuBuilder MenuBuilder;

	private List<MenuItem> menuItems;

	public PageTitle pageTitle;

	protected override async Task OnInitializedAsync() {
		NavigationManager.LocationChanged += LocationChanged;
		menuItems = await Http.GetJsonAsync<List<MenuItem>>("site-data/docs/toc.json");
		RenderMenu(NavigationManager.Uri) ;
	}
	protected override void OnAfterRender(bool firstRender) {
			
	}
	private void LocationChanged(object sender, LocationChangedEventArgs e) {
		//await ResetMenus();
		RenderMenu(e.Location);
		StateHasChanged();
	}
	private void RenderMenu(string location) {
		List<MenuItem> finalItems = new List<MenuItem>();

		if (menuItems == null)
			return;

		foreach (MenuItem menuitem in menuItems) {
			finalItems.Add(menuitem.Clone());

			if (!location.Contains(menuitem.Link)) {
				finalItems[finalItems.Count - 1].MenuItems = new List<MenuItem>();
			}
		}

		MenuBuilder = new MenuBuilder(finalItems);
	}
	private async Task ResetMenus(string a = "") {
		await JSRuntime.InvokeAsync<string>("closeSubMenu", a);
	}
}