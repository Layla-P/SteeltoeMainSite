@using System.IO
@using System
@using System.Diagnostics
@inject NavigationManager NavigationManager

@page "/doc"
@page "/docs"

@page "/{Component}"
@page "/{Component}/{Area}"
@page "/{Component}/docs"
@page "/docs/{Component}"
@page "/docs/{Component}/{Area}"

@page "/docs/{Version:int}"
@page "/docs/{Version:int}/{Component}"
@page "/docs/{Version:int}/{Component}/{Area}"

Redirecting to new docs site. Please hold.
@pageMessage

@code {
	private string _area;
	private string _component;
	private int _version;
	private int currentVersion = 2;
	private string defaultArea = "overview";
	private string defaultComponent =  "welcome";
	protected string pageMessage = "";

	[Parameter]
	public string Area {
		get { return (_area ?? defaultArea); }
		set { _area = value; }
	}

	[Parameter]
	public string Component {
		get { return (_component ?? defaultComponent); }
		set { _component = value; }
	}

	[Parameter]
	public int Version {
		get { return _version; }
		set {
			_version = (value < 2 || value > 3 || value == 0 ? currentVersion : value);
		}
	}

	protected override async Task OnParametersSetAsync(){
		var baseUri = NavigationManager.BaseUri;

		if(baseUri.IndexOf("8080") > 0){
			baseUri = baseUri.Replace("8080", "8081").Replace("https","http");
		}else if(baseUri.IndexOf("dev.steeltoe.io") > -1){
			baseUri = baseUri.Replace("dev.steeltoe.io", "docsteeltoe-staging.cfapps.io");
		}else if(baseUri.IndexOf("www.steeltoe.io") > -1){
			baseUri = baseUri.Replace("www.steeltoe.io", "blog.steeltoe.io");
		}else{
			baseUri = "https://blog.steeltoe.io/";
		}
		//Console.WriteLine(baseUri);
		try{
			NavigationManager.NavigateTo($"{baseUri}api/v{Version}/{Component}/{Area}.html", true);
		}catch(Exception){
			Console.WriteLine($"Could not redirect to '{baseUri}api/v{Version}/{Component}/{Area}.html'");
			pageMessage = $"Uh oh! Something happened while trying to redirect you to the documents site. Here's the link: {baseUri}";
		}

		await base.OnParametersSetAsync();
		return;
	}
}