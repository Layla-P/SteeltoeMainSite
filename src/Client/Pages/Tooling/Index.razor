@page "/tooling"
@page "/tooling/cli"
@page "/cli"

<style>
	h4 {
		margin-top: 5%;
	}
</style>
<PageTitle Title="Initializr" />
<div class="width-all bg-yellow">
	<div class="width-60 container">
		<div class="row no-gutters">
			<div class="col component-title">Steeltoe Tooling CLI</div>
		</div>
		<div class="row no-gutters">
			<div class="col component-desc">Cloud platforms boast many gains in productivity, but applications don’t start there. They are developed locally and then pushed.
			<br /><br />
			Steeltoe Tooling helps developers recreate how their app will be deployed in production, locally. The worst practice one can have is coding in decisions based on the environment the app is running in. This complicates testing by adding too many possible scenarios. It’s true you can’t account for every option and feature in every environment, but you can create an application that is resilient to those changes. You can create something that expects that change.
			</div>
		</div>
	</div>
</div>
<div class="width-all yellow-slant" style="min-height: 321px;">
	<div class="width-60 container">
		<div class="row no-gutters">
			<div class="col-4">
				<NavLink class="component-button nav-link" href="/tooling/cli/get-started">GET STARTED</NavLink>
			</div>
			<div class="col">
				<NavLink class="component-button nav-link" href="/docs/developer-tools/cli">VIEW THE DOCS</NavLink>
			</div>
		</div>
	</div>
</div>
<div class="width-all" style="margin-top: -4%;">
	<div class="width-60 container">
		<div class="row no-gutters">
			<div class="col component-whyuse-title mt-0">
				<h2>Installing the CLI</h2>
			</div>
		</div>
		<div class="row mb-5 no-gutters">
			<div class="col component-whyuse-desc">
				To install the CLI, use the <NavLink class="nav-link" href="https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools" target="_blank">dotnet global tools</NavLink> feature of the <NavLink class="nav-link" href="https://docs.microsoft.com/en-us/dotnet/core/tools" target="_blank">dotnet cli</NavLink>.
<pre><code>PS C:\> dotnet tool install --global --version 1.0.0-m1 Steeltoe.Cli</code></pre>
				<Note><Message>To use the CLI you will need to have Docker running. For Windows we suggest Docker Desktop using the linux containers option. For OSX, the defaults for Docker are good.</Message></Note>
			</div>
		</div>
		<div class="row no-gutters">
			<div class="col component-whyuse-title mt-0">
				<h2>Using the CLI</h2>
			</div>
		</div>
		<div class="row mb-5 no-gutters">
			<div class="col component-whyuse-desc">
				The CLI is an executable that can be run with the “st” command in a terminal or powershell.
<pre><code>PS C:\> st --version</code></pre>
				It has 3 features: init, target, and deploy. Init starts a yaml manifest (steeloe.yml) that will hold all your desired settings. Run this at the root of a csproj. The CLI uses this manifest to track what your deployment environment should look like. It holds descriptions for things like what services your app is expecting. To see the list of supported services, go here.
				<br /><br />
				The target feature tells the CLI the type of platform your app will be pushed to. Examples are Kubernetes and Cloud Foundry. See the list of supported platforms here. With a combination of the Steeltoe manifest and the type of platform targeted, the CLI has enough information to automatically create a platform specific manifest.It knows how to format the yaml manifest for each supported platform! No need for you to spend time with the little things.
				<br /><br />
				Deploy means you want to simulate what will happens when the app is pushed to its platform. Steeltoe CLI creates this simulation using Docker. It creates and configures containers running the services detailed in steeloe.yml, along with your application. Once everything is validated, the CLI creates a network between the containers, opening the relevant ports. This is a very similar design to how your app will be running in the cloud.
				<br /><br />
				Specifically with your app’s container, the CLI allows dynamic refresh. Which means you can keep everything running and iterate on your running application live, from IDEs like Visual Studio and VS Code!
			</div>
			<div class="col component-whyuse-desc">
				<h4>Pushing to the cloud</h4>
				When you have everything running just right, it’s time to push to the platform. Along with your application you also need to push a manifest, telling the platform how to configure the environment and what services to bind to.
				<br /><br />
				Steeltoe CLI has written this manifest for you at the root of the project. Tweak any customizations you might want to include and use this in a manual push command like “cf push -f..” or “kubectl apply -f..”, or check-in the manifest with your code for use in a pipeline.
			</div>
		</div>
		<div class="row py-5 no-gutters">
			<div class="col"></div>
			<div class="col text-center pr-4">
				<div class="width-all"><NavLink class="component-button nav-link" href="/tooling/cli/get-started">GET STARTED</NavLink></div>
			</div>
			<div class="col text-center pl-4">
				<div class="width-all"><NavLink class="component-button nav-link" href="https://github.com/steeltoeoss/tooling" target="_blank">VIEW THE SOURCE</NavLink></div>
			</div>
			<div class="col"></div>
		</div>
	</div>
</div>

@code {
}