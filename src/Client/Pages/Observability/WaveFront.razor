@page "/observability/wavefront"

	<Breadcrumbs NavName="Wavefront"
							 ParentLinkName="Observability"
							 ParentLinkUrl="/observability"
							 ShowGetStarted=false />
<Tutorial>
	<Title>Using Wavefront for app container metrics, distributed tracing, and observability</Title>
	<Description>This tutorial takes you creating a simple Steeltoe app with actuators, logging, and distributed tracing. With that app running you then export the data to a Wavefront account.</Description>
	<TutorialSteps>
		<div class="row">
			<div class="col-12 getting-started-header bold">Prereq's</div>
		</div>
		<div class="row">
			<div class="col-12">
				You'll need a Wavefront account to complete this guide successfully. <Href href="https://www.wavefront.com/sign-up/" NewWindow="true">Create a 30 day trial</Href>, if you don't already have access.
			</div>
		</div>
    <div class="row">
			<div class="col-12 getting-started-header">First, <b>clone to accompanying repo</b> that contains all the needed assets</div>
		</div>
    <div class="row">
			<div class="col-12 getting-started-ordered-list">
				<ol>
					<li>
						<TabSet>
							<Tab Title="Local">
								<code class="inline">git clone https://github.com/steeltoeoss-incubator/observability.git</code>
                <code class="inline">cd observability/wavefront</code>
							</Tab>
						</TabSet>
					</li>
          <li>
            Have a look at what things are provided
            <code class="inline">ls</code>
<pre><code>Name                Description
----                ----
docker-compose.yml  Docker file to start all containers
telegraf.conf       Telegraf inputs and output configuration
</code></pre>
          </li>
          <li>
            Replace the placeholder <code>YOUR_API_TOKEN</code> in <b>docker-compose.yml</b> with your Wavefront API token. Lean how to retrieve that token <Href href="https://docs.wavefront.com/users_account_managing.html" target="_blank">here</Href>.
          </li>
				</ol>
			</div>
		</div>
		<div class="row">
			<div class="col-12 getting-started-header">Then <b>create a .NET Core WebAPI</b> with the correct Steeltoe dependencies</div>
		</div>
		<div class="row">
			<div class="col-12 getting-started-ordered-list">
				<ol>
					<li>
						<Steeltoe.Client.Components.AppSettingsTab.Initiallizr ImageName="actuators-dynamiclogger-dockerfile_net31_st24.png" DependencyName="Actuators, DynamicLogging, Dockerfile" ProjectName="@ProjectName" />
					</li>
					<li>Extract the zipped project and open in your IDE of choice (we use Visual Studio)</li>
					<li>
						Add the other needed actuators in <b>startup.cs</b>
<pre><code>using Steeltoe.Management.Endpoint.Metrics;
using Steeltoe.Management.Tracing;
using Steeltoe.Management.Exporter.Tracing;

...

public class Startup
{
  ...

  public void ConfigureServices(IServiceCollection services)
  {
    ...
  
    services.AddPrometheusActuator(Configuration);
    services.AddMetricsActuator(Configuration);
    services.AddDistributedTracing(Configuration);
    services.AddZipkinExporter(Configuration);

    ...
  }
 
  public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
  {
    ...

		app.UsePrometheusActuator();
		app.UseMetricsActuator();
		app.UseTracingExporter();

		...
  }
}</code></pre>
					</li>
					<li>
						Set the actuator path, exposure, and zipkin server address in <b>appsettings.json</b>
						<TabSet>
							<Tab Title="Local">
								<pre><code>{
  "Logging": {
    "LogLevel": {
      "Default": "Debug",
      "System": "Information",
      "Microsoft": "Information"
    }
  },
  "spring": {
    "application": {
      "name": "Wavefront_demo_app"
    }
  },
  "management": {
    "endpoints": {
      "actuator": {
        "exposure": {
          "include": [ "*" ]
        }
      },
      "path": "/",
      "cloudfoundry": {
        "validateCertificates": false
      }
    },
    "metrics": {
      "exporter": {
        "cloudfoundry": {
          "validateCertificates": false
        }
      }
    },
    "tracing": {
      "alwaysSample": true,
      "useShortTraceIds ": true,
      "exporter": {
        "zipkin": {
          "endpoint": "http://wavefront-proxy:9411/api/v2/spans",
          "validateCertificates": false
        }
      }
    }
  }
}</code></pre>
							</Tab>
						</TabSet>
					</li>
          <li>
            Adjust <b>docker-compose.yml</b> to include the path to the .NET project by replacing <code>&lt;ABSOLUTE_PATH_TO_PROJECT&gt;</code> with the absolute path to the folder holding the .csproj file.
          </li>
				</ol>
			</div>
		</div>
    <div class="row">
			<div class="col-12 getting-started-header">Next, <b>deploy everything</b> with docker compose</div>
		</div>
		<div class="row">
			<div class="col-12 getting-started-ordered-list">
        <TabSet>
				  <Steeltoe.Client.Components.RunAppTab.DockerCompose>
           <AdditionalSteps>
            <Note>If you get a permissionerror message about "db.lock", close your IDE. Then run docker-compose command again.</Note>
            <Note>Confirm everything started successfully by running <code>docker-compose ps</code> and checking the State. Output should look similar to this:
              <pre><code>     Name                    Command               State                                 Ports
-----------------------------------------------------------------------------------------------------------------------------
steeltoe-app      dotnet Grafana_Observabili ...   Up      0.0.0.0:80->80/tcp
telegraf          /entrypoint.sh --config=/e ...   Up      8092/udp, 8094/tcp, 8125/udp
wavefront-proxy   /bin/bash /run.sh                Up      0.0.0.0:2878->2878/tcp, 3878/tcp, 4242/tcp, 0.0.0.0:9411->9411/tcp</code></pre></Note></AdditionalSteps>
          </Steeltoe.Client.Components.RunAppTab.DockerCompose>
			  </TabSet>
			</div>
		</div>
    <div class="row">
			<div class="col-12 getting-started-header bold">Finally <b>use Wavefront</b> to view the metrics and traces being fed in</div>
		</div>
		<div class="row">
			<div class="col-12 getting-started-ordered-list">
        <ol>
          <li>Create a new dashboard using the json template
          <pre><code>{ TODO }</code></pre>

          </li>
          <li>Visit the dashboard to see all the data being logged</li>
          <li>Click one of the "Top 5 Routes" to see the tracing for that request</li>
        </ol>
      </div>
		</div>
	</TutorialSteps>
</Tutorial>

@code
{
	//private string ServiceName = "wavefront";
	//private string InstanceName = "mywavefrontapp";
	private string ProjectName = "Wavefront_Observability";
}