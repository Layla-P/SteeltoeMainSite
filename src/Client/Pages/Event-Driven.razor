@page "/event-driven"

<Template Name="Event Driven" Features="@features">
	<Description>Event-driven systems reflect how modern businesses actually work, with thousands of small changes happening all day, every day. Steeltoe’s ability to handle events and enable developers to build applications around them, means your apps will stay in sync with your business. Steeltoe has event-driven options like streaming all the way to cloud functions, and data flows.</Description>
	<FeatureTemplate Context="Feature">
		<div class="row component-feature no-gutters">
			<div class="col-sm-6 text-center"><div class="component-feature-img"><img class="img-fluid" src="@Feature.Img" /></div></div>
			<div class="col">
				<div class="component-feature-title">@Feature.Title</div>
				<div class="component-feature-desc">@Feature.Description</div>
			</div>
		</div>
	</FeatureTemplate>
	<AltFeatureTemplate Context="Feature">
		<div class="row component-feature no-gutters">
			<div class="col">
				<div class="component-feature-title">@Feature.Title</div>
				<div class="component-feature-desc">@Feature.Description</div>
			</div>
			<div class="col-sm-6 text-center"><div class="component-feature-img"><img class="img-fluid" src="@Feature.Img" /></div></div>
		</div>
	</AltFeatureTemplate>
	<OtherArea>
		<div class="col text-center m-5">
			<div class="mb-5"><h2>Ready to get started?</h2></div>
			<div class=""><Href href="/get-started" AsButton="true">TRY THESE TUTORIALs</Href></div>
		</div>
	</OtherArea>
</Template>

@code{
	private Feature[] features = new[] {
		new Feature() {
			Title = (MarkupString)"Steeltoe Stream",
			Description = (b => {
				b.AddMarkupContent(1,"Steeltoe Stream improves your productivity when working with Apache Kafka and RabbitMQ, providing three key abstractions to simplify your code. “Binders” integrate with external messaging systems. “Bindings” bridge the gap between the messaging systems and your code. “Messages” provide the structure that your code uses to send and receive data.<Br /><br />Steeltoe Stream also provides support for provisioning, content conversion, error handling, configuration management, consumer groups, partitioning, monitoring, and health checks.<Br /><br />");
				b.OpenComponent<Href>(2);
					b.AddAttribute(3, "href","/stream");
					b.AddAttribute(4, "AsButton",true);
					b.AddAttribute(5, "ChildContent", (RenderFragment)((b) => {b.AddContent(6, "Learn more");}));
				b.CloseComponent();
			}),
			Img = "/images/Icon_data-transfer.svg"
		},
		new Feature() {
			Title = (MarkupString)"Steeltoe with Spring Cloud Data Flow",
			Description = (b => {
				b.AddMarkupContent(1,"Spring Cloud Data Flow offers developers a range of tools and automation for working with all kinds of data sources and destinations. Steeltoe helps you to develop, deploy, manage, and scale high-throughput streaming data pipelines across multiple cloud-native platforms.<Br /><br />");
				b.OpenComponent<Href>(2);
					b.AddAttribute(3, "href","/data-flow");
					b.AddAttribute(4, "AsButton",true);
					b.AddAttribute(5, "ChildContent", (RenderFragment)((b) => {b.AddContent(6, "Learn more");}));
				b.CloseComponent();
			}),
			Img = "/images/Icon_network.svg"
		},
		new Feature() {
			Title = (MarkupString)"Steeltoe Messaging",
			Description = (b => {
				b.AddMarkupContent(1,"With the Steeltoe Messaging project, you can apply core concepts to the development of Kafka or RabbitMQ based messaging solutions.<br /><br />Both include \"template\" as a high-level message handling abstraction, and support message-driven POCOs with a \"listener container.\"<Br /><br />");
				b.OpenComponent<Href>(2);
					b.AddAttribute(3, "href","/messaging");
					b.AddAttribute(4, "AsButton",true);
					b.AddAttribute(5, "ChildContent", (RenderFragment)((b) => {b.AddContent(6, "Learn more");}));
				b.CloseComponent();
			}),
			Img = "/images/Icon_device-exchange.svg"
		}
	};
}