@using System.Diagnostics

@inject IJSRuntime JSRuntime
@inject IParseFromMarkdown ParseMarkdown

@page "/labs/{LabName}"
@page "/labs/{LabName}/{ExerciseName}"

<PageTitle Title="Lab Exercises" />

<div class="width-all">
	<div class="width-90 container">
		<div class="row no-gutters">
			<div class="col mt-5">
				@html
			</div>
		</div>
	</div>
</div>

@code {
	private MarkupString html;
	private string _labName;
	private string _exerciseName;

	[Parameter]
	public string LabName {
		get { return _labName; }
		set { _labName = value; }
	}

	[Parameter]
	public string ExerciseName {
		get { return _exerciseName; }
		set { _exerciseName = value; }
	}

	protected override async Task OnParametersSetAsync() {
		//Console.WriteLine($@"labs/{_labName}/{(_exerciseName ?? _labName)}.md");
		try{
			html = await ParseMarkdown.GetHtmlAsync($@"labs/{_labName}/{(_exerciseName ?? _labName)}.md");
		}catch{
			html = (MarkupString)$@"<div>No lab could be found at 'labs/{_labName}/{(_exerciseName ?? _labName)}.md'</div>";
		}

		StateHasChanged();

		await JSRuntime.InvokeVoidAsync("highlightCode",true);
		StateHasChanged();

		await base.OnParametersSetAsync();
		return;
	}

}